buildscript {
    repositories {
        mavenCentral()
		mavenLocal()
        maven {
            name "jboss"
            url "http://repository.jboss.org/nexus/content/groups/public/"
        }
    }
    dependencies {
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1'
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'

group = 'org.jboss.jdocbook'
version = '1.2.3-SNAPSHOT'

defaultTasks 'classes'

targetCompatibility = "1.6"
sourceCompatibility = "1.6"

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name "jboss"
        url "http://repository.jboss.org/nexus/content/groups/public/"
    }
}

ext {
    expectedGradleVersion = '1.9'
    spock = ['org.spockframework:spock-core:0.5-groovy-1.8@jar',
            'org.hamcrest:hamcrest-core:1.2.1@jar',
            'org.hamcrest:hamcrest-library:1.2.1@jar',
            'cglib:cglib-nodep:2.2',
            'org.objenesis:objenesis:1.2'
    ]
    jmock = ['org.jmock:jmock:2.5.1@jar',
            'org.hamcrest:hamcrest-core:1.1@jar',
            'org.jmock:jmock-junit4:2.5.1@jar',
            'org.jmock:jmock-legacy:2.5.1@jar',
            'org.objenesis:objenesis:1.2',
            'cglib:cglib-nodep:2.2'
    ]
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.jboss.jdocbook:jdocbook-core:1.1.0'
    compile 'org.apache.ant:ant:1.7.0' //don't see why we need this here

    compile localGroovy()

    testCompile 'junit:junit:4.8.1'
    testCompile jmock
    testCompile spock
    testCompile 'org.slf4j:slf4j-simple:1.6.1@jar'
    testCompile 'org.slf4j:jcl-over-slf4j:1.6.1@jar'
}

manifest.mainAttributes(
        provider: 'gradle',
        'Implementation-Url': 'http://jboss.org',
        'Implementation-Version': version,
        'Implementation-Vendor': 'JBoss.org',
        'Implementation-Vendor-Id': 'org.jboss'
)

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            pom.withXml {
                // append additional metadata
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    name 'jDocBook Plugin for Gradle'
                    description 'Plugin for integrating jDocBook into Gradle'
                    url 'http://github.com/gradle/gradle-jdocbook'
                    organization {
                        name 'JBoss.org'
                        url 'http://jboss.org'
                    }
                    issueManagement {
                        // for the time being just use the github issue tracker
                        system 'github'
                        url 'http://github.com/gradle/gradle-jdocbook/issues'
                    }
                    scm {
                        url "http://github.com/gradle/gradle-jdocbook"
                        connection "scm:git:https://github.com/gradle/gradle-jdocbook.git"
                        developerConnection "scm:git:git@github.com:gradle/gradle-jdocbook.git"
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'sebersole'
                            name 'Steve Ebersole'
                        }
                        developer {
                            id 'stliu'
                            name 'Strong Liu'
                        }
                        developer {
                            id 'adammurdoch'
                            name 'Adam Murdoch'
                        }
                        developer {
                            id 'hansd'
                            name 'Hans Dockter'
                        }
                    }
                }

                // TEMPORARY : currently Gradle Publishing feature is exporting dependencies as 'runtime' scope,
                //      rather than 'compile'; fix that.
                asNode().dependencies[0].dependency.each {
                    it.scope[0].value = 'compile'
                }
            }
        }
    }

    repositories {
        maven {
            if ( version.endsWith( 'SNAPSHOT' ) ) {
                name 'jboss-snapshots-repository'
                url 'https://repository.jboss.org/nexus/content/repositories/snapshots'
            }
            else {
                name 'jboss-releases-repository'
                url 'https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/'
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file( "$project.buildDir/generated-pom.xml" )
    }
}

task sourcesJar(type: Jar, dependsOn: compileJava) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task wrapper(type: Wrapper) {
    gradleVersion = expectedGradleVersion
}

