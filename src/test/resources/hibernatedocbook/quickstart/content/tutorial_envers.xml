<?xml version='1.0' encoding='UTF-8' ?>
<!--
  ~ jDocBook, processing of DocBook sources
  ~
  ~ Copyright (c) 2011, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="hibernate-gsg-tutorial-envers">
    <title>Tutorial Using Envers</title>

    <para>
        This tutorial is located within the download bundle under<filename>envers</filename>.
    </para>
    <itemizedlist>
        <title>Objectives</title>
        <listitem>
            <para>
                Configure Envers.
            </para>
        </listitem>
        <listitem>
            <para>
                Use the Envers APIs to view and analyze historical data.
            </para>
        </listitem>
    </itemizedlist>

    <section id="hibernate-gsg-tutorial-envers-config">
        <title>
            <filename>persistence.xml</filename>
        </title>
        <para>
            This file was discussed in the
            <systemitem>JPA</systemitem>
            tutorial in<xref
                linkend="hibernate-gsg-tutorial-jpa-config"/>, and is largely the same here. The major difference is the
            set
            of properties defining<firstterm>listeners</firstterm>. Listeners enable Envers to receive notfications from
            Hibernate processing about
            <firstterm>events</firstterm>
            such as saving or updating of entities.
        </para>
    </section>

    <section id="hibernate-gsg-tutorial-envers-entity">
        <title>The annotated entity Java class</title>
        <para>
            Again, the entity is largely the same as in
            <xref linkend="hibernate-gsg-tutorial-jpa-entity"/>
            . The major
            difference is the addition of the
            <interfacename>@org.hibernate.envers.Audited</interfacename>
            annotation, which
            tells Envers to automatically track changes to this entity.
        </para>
    </section>

    <section id="hibernate-gsg-tutorial-envers-test">
        <title>Example code</title>
        <para>
            Again, this tutorial makes use of the
            <systemitem>JPA</systemitem>
            APIs. However, the code also makes a change to one
            of the entites, then uses the Envers API to pull back the initial
            <firstterm>revision</firstterm>
            as well as the updated
            revision. A revision refers to a version of an entity.
        </para>
        <example id="hibernate-gsg-tutorial-envers-test-api">
            <title>Using the
                <interfacename>org.hibernate.envers.AuditReader</interfacename>
            </title>
            <programlisting role="JAVA">public void testBasicUsage() {
                ...
                AuditReader reader = AuditReaderFactory.get( entityManager );
                Event firstRevision = reader.find( Event.class, 2L, 1 );
                ...
                Event secondRevision = reader.find( Event.class, 2L, 2 );
                ...
                }
            </programlisting>
        </example>
        <procedure>
            <title>Description of Example</title>
            <step>
                <para>
                    An
                    <interfacename>org.hibernate.envers.AuditReader</interfacename>
                    is obtained from the
                    <classname>org.hibernate.envers.AuditReaderFactory</classname>
                    which wraps the
                    <interfacename>javax.persistence.EntityManager</interfacename>.
                </para>
            </step>
            <step>
                <para>
                    Next,the
                    <methodname>find</methodname>
                    method retrieves specific revisions of the entity. The first call
                    reads<literal>find revision number 1 of Event with id 2</literal>. The second call reads<literal>
                    find
                    revision number 2 of Event with id 2</literal>.
                </para>
            </step>
        </procedure>
    </section>

    <section id="hibernate-gsg-tutorial-annotations-further">
        <title>Take it further!</title>
        <itemizedlist>
            <title>Practice Exercises</title>
            <listitem>
                <para>

                </para>
            </listitem>
            <listitem>
                <para>

                </para>
            </listitem>
        </itemizedlist>
    </section>

</chapter>